#! /usr/bin/env python

"""Aegir get servers script

Gets a list of servers from Aegir and writes them to a java properties file.

Valid options:
  --file - The file to write to.
  --aegir_host - The Aegir server to connect to.
"""

import sys, getopt
import fabric.api as fabric

class Usage(Exception):
    def __init__(self, msg):
        self.msg = msg

def main(argv=None):
    if argv is None:
        argv = sys.argv
    try:
        try:
            opts, args = getopt.getopt(argv[1:], "h", ["help", "file=", "aegir_host="])
        except getopt.error, msg:
             raise Usage(msg)
        # process options
        file = None
        aegir_host = None
        
        for o, a in opts:
            if o in ("-h", "--help"):
                print __doc__
                return 0;
            if o in ("--file"):
                file = a
            if o in ("--aegir_host"):
                aegir_host = a
                
        if file is None:
            raise Usage, "the --file option must be specified"
        if aegir_host is None:
            raise Usage, "the --file option must be specified"
        
        get_servers(file, aegir_host)
                
        return 0
        
    except Usage, err:
        print >>sys.stderr, err.msg
        print >>sys.stderr, "for help use --help"
        return 2
    
def get_servers(file=None,aegir_host=None):
    # Grab the file to write to.
    with open(file, 'w') as f:
        f.write('# Automatically generated by the aegir_get_servers.py python script' + '\n')
        
        # Connect to the aegir host.
        fabric.env.host_string = aegir_host
        fabric.env.user = 'root'
        
        webs = fabric.run("su - -s /bin/sh aegir -c 'drush @hostmaster cm-build-scripts-list-servers http'", pty=True)
        webs_names = []
        for line in webs.splitlines():
            webs_names.append(line)
        f.write('http=' + ','.join(webs_names) + '\n')
        
        dbs = fabric.run("su - -s /bin/sh aegir -c 'drush @hostmaster cm-build-scripts-list-servers db'", pty=True)
        dbs_names = []
        for line in dbs.splitlines():
            dbs_names.append(line)
        f.write('db=' + ','.join(dbs_names) + '\n')
    f.close()
    
if __name__ == "__main__":
    sys.exit(main())